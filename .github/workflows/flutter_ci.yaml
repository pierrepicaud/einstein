name: Flutter CI

# This workflow is triggered on pushes to the repository.
on:
  push:
    branches:
    - main
    - codecov
  workflow_dispatch:
    inputs:
      failJob:
        description: Fail the job to trigger Telegram?
        type: boolean
        required: true
        default: false
   
jobs:
  aspell: # REAME.md Spell Checker
    name: Spellcheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: rojopolis/spellcheck-github-actions@0.27.0
        name: Spellcheck
        with:
          config_path: .spellcheck.yml 
          source_files: README.md CHANGELOG.md notes/Notes.md
          task_name: Markdown
          output_file: spellcheck-output.txt

      # Upload spell check report as a GitHub Artifact
      - uses: actions/upload-artifact@v3
        with:
          name: Spellcheck Report
          path: spellcheck-output.txt

  code_metric: # Check Code Metric
    name: Dart Code Metric
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: dart-code-metrics
        uses: dart-code-checker/dart-code-metrics-action@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}  

  build_web: # Build for Android and Web
    name: Web Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: browser-actions/setup-chrome@latest
      - name: Setup Flutter SDK
        uses: flutter-actions/setup-flutter@v2
        with:
          channel: stable
          version: 3.3.6
      - name: Install dependencies
        run: flutter pub get
      # - name: Run tests
      #   run: flutter test --platform chrome
      - name: Build Web
        run: flutter build web

  build_android: # Build for Android and Web
    name: Android Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: browser-actions/setup-chrome@latest
      - name: Setup Flutter SDK
        uses: flutter-actions/setup-flutter@v2
        with:
          channel: stable
          version: 3.3.6
      - name: Install dependencies
        run: flutter pub get
      - name: Run Lint
        run: flutter analyze .
      - name: Build APK
        run: flutter build apk 
        id: android_build

      - name: Notify Build Failed
        uses: appleboy/telegram-action@master
        if: ${{ (steps.android_build.outcome == 'failed') || (github.event.inputs.failJob == 'true') }}
        with:
          to: ${{ secrets.TELEGRAM_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            The ${{ github.event_name }} build failed


      - name: Create Release
        uses: actions/create-release@v1
        if: steps.android_build.outcome == 'success'
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ github.ref }}
          tag_name: dummy_tag
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Upload APK Artifact    # Upload generated apk to the artifacts.
        uses: actions/upload-artifact@v1
        if: steps.create_release.outcome == 'success'
        with:
          name: release-apk
          path: build/app/outputs/apk/release/app-release.apk
      
      - name: Upload Release APK Artifact
        uses: actions/upload-release-asset@v1
        if: steps.create_release.outcome == 'success'
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/app/outputs/apk/release/app-release.apk
          asset_name: release-apk.apk
          asset_content_type: application/gzip

  codecov: # check code coverage
    name: Code Cov
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@master
        with:
          python-version: 3.7
      - name: Generate coverage report
        run: |
          sudo snap install flutter --classic
          flutter test --coverage
          sudo apt install lcov
          genhtml coverage/lcov.info -o coverage/html
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage/
          env_vars: OS,PYTHON
          fail_ci_if_error: false
          files: ./coverage/lcov.info
          flags: flutter_tests
          name: codecov-umbrella
          verbose: true

